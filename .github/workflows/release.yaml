name: release

on:
  push:
    tags:
      - v*

jobs:
  build-appimage:

    runs-on:  ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Parse the Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=PRERELEASE::$([[ ! ${GITHUB_REF} =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "true")
      - name: Set up APPDIR for after_bundle
        run: echo "APPDIR=${PWD}/AppDir" >> $GITHUB_ENV
      # - name: Build AppImage
      #   uses: AppImageCrafters/build-appimage@master
      #   with:
      #     recipe: './appimage-builder.yml'
      #   env:
      #     APP_VERSION: ${{ steps.version.outputs.VERSION }}
      - name: Generate Changelog
        run: |
          pwd
          ls -lah
          ls -lah .git
          git tag
          git fetch
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          git --no-pager log --pretty="format:- %s" "$(git describe --abbrev=0 --tags '${{ steps.version.outputs.VERSION }}^')..${{ steps.version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: test changelog
        run: printf "${GITHUB_ENV}"
      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     name: ${{ steps.version.outputs.VERSION }}
      #     artifacts: 'rclip-*.AppImage'
      #     body: ${{ env.CHANGELOG || 'internal release' }}
      #     prerelease: ${{ steps.version.outputs.PRERELEASE }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
