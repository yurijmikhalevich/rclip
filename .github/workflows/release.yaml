name: release

on:
  push:
    tags:
      - v*

jobs:
  pypi:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - run: poetry build
      - uses: pypa/gh-action-pypi-publish@release/v1

  snap:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Parse the Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=PRERELEASE::$(
            [[ ! $GITHUB_REF =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "true"
          )
      - name: Configure git for "snapcraft remote-build"
        run: |
          git config --global user.email "yurij@mikhalevi.ch"
          git config --global user.name "Yurij Mikhalevich"
      - name: Setup launchpad creds
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad
          echo "${{ secrets.LAUNCHPAD_CREDENTIALS }}" > ~/.local/share/snapcraft/provider/launchpad/credentials
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - name: Build wheel
        run: |
          poetry build
          mkdir snap/local
          cp -v dist/rclip-*.tar.gz snap/local
      - run: sudo snap install snapcraft --classic
      - run: snapcraft remote-build --launchpad-accept-public-upload
      - name: Validate built snap
        run: |
          sudo snap install rclip_*_amd64.snap --dangerous
          rclip cat
      - name: Upload snaps to the beta channel
        run: |
          for snap in *.snap; do
            snapcraft upload --release=beta "$snap"
          done
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}
      - name: Promote snaps to the stable channel
        if: ${{ steps.version.outputs.PRERELEASE != 'true' }}
        run: snapcraft promote --from-channel=beta --to-channel=stable --yes rclip
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}

  appimage:
    runs-on:  ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Parse the Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=PRERELEASE::$(
            [[ ! $GITHUB_REF =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "true"
          )
      - name: Set up APPDIR for after_bundle
        run: echo "APPDIR=$PWD/AppDir" >> $GITHUB_ENV
      - name: Build AppImage
        uses: AppImageCrafters/build-appimage@v1.3
        with:
          recipe: './appimage-builder.yml'
        env:
          APP_VERSION: ${{ steps.version.outputs.VERSION }}
      - name: Generate Changelog
        id: changelog
        run: |
          git fetch --unshallow
          PREVIOUS_TAG="$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))"
          CHANGELOG="$(git --no-pager log --pretty="format:- %s" $PREVIOUS_TAG..${{ steps.version.outputs.VERSION }})"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=CHANGELOG::$CHANGELOG"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.version.outputs.VERSION }}
          artifacts: 'rclip-*.AppImage'
          body: ${{ steps.changelog.outputs.CHANGELOG || 'internal release' }}
          prerelease: ${{ steps.version.outputs.PRERELEASE }}
          token: ${{ secrets.GITHUB_TOKEN }}
