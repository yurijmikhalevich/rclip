version: 1
script:
  # Remove any previous build
  - rm -rf AppDir | true
  # Make usr and icons dirs
  - mkdir -p AppDir/usr/src AppDir/usr/share/icons/hicolor/256x256/apps/
  # Copy the python application code and icon into the AppDir
  - cp rclip AppDir/usr/src -r
  - cp logo@256.png AppDir/usr/share/icons/hicolor/256x256/apps/rclip.png


AppDir:
  path: ./AppDir

  app_info:
    id: org.yurijmikhalevich.rclip
    name: rclip
    icon: rclip
    version: !ENV ${APP_VERSION}
    # Set the python executable as entry point
    exec: usr/bin/python3.8
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "${APPDIR}/usr/src/rclip/main.py $@"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'
      - sourceline: 'deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic main'
        key_url: 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xba6932366a755776'
      - sourceline: 'deb http://ppa.launchpad.net/fbirlik/sqlite3/ubuntu bionic main'
        key_url: 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x17e1dd50b8a4f9c1'

    include:
      - libffi6
      - libpython3.8-minimal
      - libpython3.8-stdlib
      - python3.8
      - python3.8-distutils
      - python3.8-minimal
      - python3-pip
    exclude: []

  after_bundle: >
    PATH=${APPDIR}/usr/bin:${PATH} ./appimage_after_bundle.sh

  runtime:
    env:
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/src:${APPDIR}/usr/lib/python3.8/site-packages'
      # SSL Certificates are placed in a different location for every system therefore we ship our own copy
      SSL_CERT_FILE: '${APPDIR}/usr/lib/python3.8/site-packages/certifi/cacert.pem'

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun "kitty"
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun "kitty"
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun "kitty"
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun "kitty"
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun "kitty"

AppImage:
  update-information: 'gh-releases-zsync|AppImageCrafters|python-appimage-example|latest|python-appimage-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64
